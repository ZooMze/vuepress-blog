(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{562:function(t,s,e){t.exports=e.p+"assets/img/sshKeys.a1267575.png"},563:function(t,s,e){t.exports=e.p+"assets/img/sshLocation.53ec00a0.png"},564:function(t,s,e){t.exports=e.p+"assets/img/sshKeysSettings.f98bb49b.png"},565:function(t,s,e){t.exports=e.p+"assets/img/sshTortoiseGit.e0612b4c.png"},613:function(t,s,e){"use strict";e.r(s);var a=e(5),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("为什么GitHub需要SSH Key呢？")]),t._v(" "),a("p",[t._v("因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。")]),t._v(" "),a("p",[t._v("当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。")]),t._v(" "),a("p",[t._v("那么开始配置SSH吧~")]),t._v(" "),a("h2",{attrs:{id:"_1-检查是否存在ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-检查是否存在ssh"}},[t._v("#")]),t._v(" 1.检查是否存在SSH")]),t._v(" "),a("p",[t._v("首先检查有没有在GitHub的 "),a("a",{attrs:{href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/settings/keys"),a("OutboundLink")],1),t._v(" 上添加你本机的SSH key。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(562),alt:"查看GitHub SSH Keys"}})]),t._v(" "),a("p",[t._v("在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳\n。\n"),a("img",{attrs:{src:e(563),alt:"查看本地秘钥"}})]),t._v(" "),a("p",[t._v("如果没有, 则开始第2步, 创建SSH Key")]),t._v(" "),a("h2",{attrs:{id:"_2-创建-ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-ssh-key"}},[t._v("#")]),t._v(" 2.创建 SSH Key")]),t._v(" "),a("p",[t._v("打开Shell（Windows下打开Git Bash），运行以下命令")]),t._v(" "),a("p",[a("code",[t._v('$ ssh-keygen -t rsa -C "youremail@example.com"')])]),t._v(" "),a("p",[t._v("你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可。")]),t._v(" "),a("p",[t._v("执行完毕后, 在提示的目录或者本文开头图片中的地址找到相应的的文件 id_rsa 和 id_rsa.puh (这个就是公钥, 下一步我们将使用它)")]),t._v(" "),a("h2",{attrs:{id:"_3-配置-ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置-ssh-key"}},[t._v("#")]),t._v(" 3.配置 SSH Key")]),t._v(" "),a("p",[t._v("进入GitHub的个人设置页, 进入 SSH and GPG keys 选项卡")]),t._v(" "),a("p",[t._v("点击右侧的 "),a("strong",[t._v("New SSH key")]),t._v(" 添加按钮, 将id_rsa.pub 内的内容粘贴进输入框点击保存即可")]),t._v(" "),a("p",[a("img",{attrs:{src:e(564),alt:"进入配置"}})]),t._v(" "),a("h2",{attrs:{id:"其他问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[t._v("#")]),t._v(" 其他问题")]),t._v(" "),a("h3",{attrs:{id:"git-bash-的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-bash-的问题"}},[t._v("#")]),t._v(" Git Bash 的问题")]),t._v(" "),a("p",[t._v("如果添加了还是出现这个问题，那么问题大概率就定位在了你本机的这个git仓库并没有和这个SSH key 关联上。用下述方法解决:")]),t._v(" "),a("p",[a("code",[t._v("$ ssh-add 你的id_rsa文件地址")])]),t._v(" "),a("p",[t._v("注意这里ssh-add后面填的是私钥id_rsa的地址，例如 C:/用户/Admin/.ssh/id_rsa")]),t._v(" "),a("p",[t._v("如果add这一步失败的话， 运行如下命令：")]),t._v(" "),a("p",[a("code",[t._v("$ ssh-agent -s")])]),t._v(" "),a("p",[t._v("之后再次add，如果仍然报错:")]),t._v(" "),a("p",[a("code",[t._v("Could not open a connection to your authentication agent.")])]),t._v(" "),a("p",[t._v("那么再运行如下命令：")]),t._v(" "),a("p",[a("code",[t._v("$ ssh-agent bash")])]),t._v(" "),a("p",[t._v("然后再再次add, 成功之后出现:")]),t._v(" "),a("p",[a("code",[t._v("Identity added: /c/Users/Admin/.ssh/id_rsa (你的邮箱地址)")])]),t._v(" "),a("p",[t._v("验证是不是添加成功的命令:")]),t._v(" "),a("p",[a("code",[t._v("$ ssh -T git@github.com")])]),t._v(" "),a("p",[t._v("看到这句话就OK咯:")]),t._v(" "),a("p",[a("code",[t._v("Hi 你的用户名! You've successfully authenticated, but GitHub does not provide shell access.")])]),t._v(" "),a("h3",{attrs:{id:"tortoisegit-的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tortoisegit-的问题"}},[t._v("#")]),t._v(" TortoiseGit 的问题")]),t._v(" "),a("p",[t._v("按照上述方法配置完之后你会发现, TortoiseGit还是用不了, 这是为啥捏? 因为TortoiseGit默认是PuTTY密钥, 如果安装时一路下一步下一步, 那么公钥是对不上滴, 那么需要再来重新来他配置OpenSSH")]),t._v(" "),a("p",[t._v("进入TortoiseGit / 设置 / 常规设置 / 重新运行首次启动向导")]),t._v(" "),a("p",[a("img",{attrs:{src:e(565),alt:"TortoiseGit"}})]),t._v(" "),a("p",[t._v("配置完成后, 跟Git Bash配置好的SSH公钥可以一起使用, 两者互不干扰")]),t._v(" "),a("p",[t._v("参考资料:\n"),a("a",{attrs:{href:"https://blog.csdn.net/dotphoenix/article/details/100130424",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/dotphoenix/article/details/100130424"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_19393857/article/details/81629431",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/qq_19393857/article/details/81629431"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/7d57ce4147d3",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/7d57ce4147d3"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);