(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{549:function(t,s,a){t.exports=a.p+"assets/img/getDoms.324fa0f4.png"},550:function(t,s,a){t.exports=a.p+"assets/img/getDomsArray.74dee134.png"},610:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"基本介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[t._v("#")]),t._v(" 基本介绍")]),t._v(" "),n("h3",{attrs:{id:"使用语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用语法"}},[t._v("#")]),t._v(" 使用语法")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// func是一个函数, 在此省略")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("param1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("param2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二个参数是数组")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h4",{attrs:{id:"返回值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("call")]),t._v(" / "),n("code",[t._v("apply")]),t._v(": 返回 "),n("code",[t._v("func")]),t._v(" 执行的结果 ;")]),t._v(" "),n("li",[n("code",[t._v("bind")]),t._v(": 返回 "),n("code",[t._v("func")]),t._v(" 的拷贝，并拥有指定的 "),n("code",[t._v("this")]),t._v(" 值和初始参数。")])]),t._v(" "),n("h4",{attrs:{id:"参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("thisArg")]),t._v("(可选)")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("func")]),t._v(" 的 "),n("code",[t._v("this")]),t._v(" 指向 "),n("code",[t._v("thisArg")]),t._v(" 对象；")]),t._v(" "),n("li",[t._v("非严格模式下：若 "),n("code",[t._v("thisArg")]),t._v(" 指定为 "),n("code",[t._v("null")]),t._v("，"),n("code",[t._v("undefined")]),t._v(" ，则 "),n("code",[t._v("func")]),t._v(" 的 "),n("code",[t._v("this")]),t._v(" 指向"),n("code",[t._v("window")]),t._v(" 对象；")]),t._v(" "),n("li",[t._v("严格模式下："),n("code",[t._v("func")]),t._v(" 的 "),n("code",[t._v("this")]),t._v(" 为 "),n("code",[t._v("undefined")]),t._v("；")]),t._v(" "),n("li",[t._v("值为原始值(数字，字符串，布尔值)的 "),n("code",[t._v("this")]),t._v(" 会指向该原始值的自动包装对象，如 "),n("code",[t._v("String")]),t._v(" 、"),n("code",[t._v("Number")]),t._v(" 、"),n("code",[t._v("Boolean")]),t._v("。")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("param1")]),t._v("，"),n("code",[t._v("param2")]),t._v("(可选): 传给 "),n("code",[t._v("func")]),t._v(" 的参数。")]),t._v(" "),n("ol",[n("li",[t._v("如果 "),n("code",[t._v("param")]),t._v(" 不传或为 "),n("code",[t._v("null")]),t._v(" / "),n("code",[t._v("undefined")]),t._v(" ，则表示不需要传入任何参数.")]),t._v(" "),n("li",[t._v("apply第二个参数为 "),n("RouterLink",{attrs:{to:"/views/JavaScript/Call&Apply&Bind.html#类数组"}},[t._v("类数组")]),t._v(" 对象，数组内各项的值为传给func的参数。")],1)])])]),t._v(" "),n("h3",{attrs:{id:"必须是函数才可以使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#必须是函数才可以使用"}},[t._v("#")]),t._v(" 必须是函数才可以使用")]),t._v(" "),n("p",[t._v("这三个方法都是 "),n("code",[t._v("Function")]),t._v(" 的方法, 意味着只有函数对象才能使用;\n例如 "),n("code",[t._v("Object.prototype.toString")]),t._v(" 就是个函数，我们经常看到这样的用法："),n("code",[t._v("Object.prototype.toString.call(data)")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),n("p",[n("strong",[t._v("改变函数的 "),n("code",[t._v("this")]),t._v(" 指向")]),t._v(" , 目前这三个方法都是拿来做这件事的\n从"),n("RouterLink",{attrs:{to:"/views/JavaScript/Call&Apply&Bind.html#返回值"}},[t._v("返回值")]),t._v("可以看出它们的作用区别:")],1),t._v(" "),n("ul",[n("li",[n("code",[t._v("call")]),t._v(" / "),n("code",[t._v("apply")]),t._v(": 修改 "),n("code",[t._v("this")]),t._v(" 后再 "),n("strong",[t._v("执行")]),t._v(" 该函数")]),t._v(" "),n("li",[n("code",[t._v("bind")]),t._v(": 修改 "),n("code",[t._v("this")]),t._v(" 后 "),n("strong",[t._v("不执行")]),t._v(" , 而是返回该函数")])]),t._v(" "),n("h3",{attrs:{id:"分清-call-和-apply"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分清-call-和-apply"}},[t._v("#")]),t._v(" 分清 call 和 apply")]),t._v(" "),n("p",[t._v("这两个方法最终实现的效果是完全相同的, 唯一的不同点是在参数的写法上:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("apply")]),t._v(" 只有两个参数, 第二个参数为数组, 其中包含了所有参数")]),t._v(" "),n("li",[n("code",[t._v("call")]),t._v(" 有n个参数, 其中第2~n个包含了所有参数")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("记忆方法")]),t._v(" "),n("p",[n("strong",[t._v("apply an array")]),t._v(": 他们都以相同的字母 "),n("code",[t._v("a")]),t._v(" 开头, 这里的array 是指 "),n("RouterLink",{attrs:{to:"/views/JavaScript/Call&Apply&Bind.html#类数组"}},[t._v("类数组")])],1)]),t._v(" "),n("h3",{attrs:{id:"类数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类数组"}},[t._v("#")]),t._v(" 类数组")]),t._v(" "),n("p",[t._v("数组的特征有：可以通过索引("),n("code",[t._v("index")]),t._v(") 调用，如 "),n("code",[t._v("array[0]")]),t._v("；具有长度属性 "),n("code",[t._v("length")]),t._v("；可以通过 "),n("code",[t._v("for")]),t._v(" 循环或 "),n("code",[t._v("forEach")]),t._v(" 方法，进行遍历。")]),t._v(" "),n("p",[t._v("那么，类数组是什么呢？顾名思义，就是具备与数组特征类似的对象。比如，下面的这个对象，就是一个类数组。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arrayLike "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  length"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("类数组，还是比较常用的，只是我们平时可能没注意到。比如，我们获取 DOM 节点的方法，返回的就是一个类数组(下一节将有例子来说明)；再比如，在一个函数体中使用 "),n("code",[t._v("arguments")]),t._v(" 获取到的所有参数，也是一个类数组。")]),t._v(" "),n("p",[t._v("但是需要注意的是："),n("strong",[t._v("类数组无法使用 "),n("code",[t._v("forEach()")]),t._v("、"),n("code",[t._v("splice()")]),t._v("、"),n("code",[t._v("push()")]),t._v(" 等数组原型链上的方法")]),t._v("，毕竟它不是真正的数组。那么类数组想使用数组原型链上的方法，该怎么办呢？请继续往下看。")]),t._v(" "),n("h2",{attrs:{id:"核心理念-借用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#核心理念-借用方法"}},[t._v("#")]),t._v(" 核心理念: 借用方法")]),t._v(" "),n("p",[t._v("刚刚在 "),n("RouterLink",{attrs:{to:"/views/JavaScript/Call&Apply&Bind.html#作用"}},[t._v("作用")]),t._v(" 这一节提到了它们都是在修改 "),n("code",[t._v("this")]),t._v(" 的指向, 这只是表面效果, 真实的意思其实是: "),n("strong",[t._v("借用方法")]),t._v("。")],1),t._v(" "),n("p",[n("strong",[t._v("借助已实现的方法，改变方法中的 "),n("code",[t._v("this")]),t._v(" 指向，减少重复代码，节省内存。")])]),t._v(" "),n("p",[t._v("现在来试试上一节提到的获取DOM是类数组的例子:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:a(549),alt:"getDoms"}})]),t._v(" "),n("p",[t._v("在控制台可以看到, 获取的结果是HTMLCollection 是有length信息的类数组, 而非真正的数组Array。")]),t._v(" "),n("p",[t._v("现在如果我们想对获取出来的内容进行遍历, 通常的做法就是用 "),n("code",[t._v("for")]),t._v(", 但我们要执意想让 "),n("strong",[t._v("类数组")]),t._v(" 也能使用 "),n("code",[t._v("forEach")]),t._v(" 方法怎么办呢?")]),t._v(" "),n("p",[t._v("这时候我们就来借一下数组的方法, 并让数据由 "),n("strong",[t._v("类数组")]),t._v(" 变成 "),n("strong",[t._v("真正的数组")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" domNodes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:a(550),alt:"getDomsArray"}})]),t._v(" "),n("p",[t._v("这里利用了 "),n("code",[t._v("slice()")]),t._v(" 方法的返回值特点, 由于没有第二个参数, 这里并未执行删除操作, 所以返回了被操作的数组本身, 当然最开始它只是类数组, 由于 "),n("code",[t._v("this")]),t._v(" 的指向改变, 类数组充当了 "),n("code",[t._v("slice()")]),t._v(" 的参数, 最终被作为数组返回出来。")]),t._v(" "),n("h2",{attrs:{id:"更多应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更多应用场景"}},[t._v("#")]),t._v(" 更多应用场景")]),t._v(" "),n("p",[t._v("上一节其实就一个真实的使用场景了, 除此之外, 下面介绍的这些使用场景，摸透其中的门道之后，就会发现本质上还是："),n("strong",[t._v("借用方法")])]),t._v(" "),n("h3",{attrs:{id:"最基础的借用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最基础的借用"}},[t._v("#")]),t._v(" 最基础的借用")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfunc2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'func2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> function func2() {}fun2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行上下文发生变化")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> [object Object]func2")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h3",{attrs:{id:"类型判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型判断"}},[t._v("#")]),t._v(" 类型判断")]),t._v(" "),n("p",[t._v("经典的借用看这里: "),n("RouterLink",{attrs:{to:"/views/summary/OriginalJavaScript.html#对象"}},[t._v("数据类型的判断")])],1),t._v(" "),n("h3",{attrs:{id:"数组找最大最小值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组找最大最小值"}},[t._v("#")]),t._v(" 数组找最大最小值")]),t._v(" "),n("p",[t._v("借助Math对象, 可以在多个数字中找最大值,他们以可枚举的状态入参, 当源数据是数组时, 可以用 "),n("code",[t._v("apply()")]),t._v(" 来借一下Math的 "),n("code",[t._v("max()")]),t._v(" 方法, 注意这里可以使用 "),n("code",[t._v("apply()")]),t._v(" 是因为 "),n("code",[t._v("apply()")]),t._v(" 接收的第二个参数正好是数组, 并且实际应用是还会对其结构成枚举属性, 正好符合 "),n("code",[t._v("max()")]),t._v(" 方法需要的参数结构")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("78")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> 78")]),t._v("\nMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> 12")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h3",{attrs:{id:"找回执行上下文context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找回执行上下文context"}},[t._v("#")]),t._v(" 找回执行上下文Context")]),t._v(" "),n("p",[t._v("先看如下代码:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getX")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> xxx")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" getXOuter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getX\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXOuter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> undefined")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("让"),n("code",[t._v("getXOuter()")]),t._v(" 也能正常输出 "),n("code",[t._v("xxx")]),t._v(", 肥肠简单:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" getXOuter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getX\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXOuter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// >> xxx")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("本例展示了在不同的执行上下文中this的指向是"),n("strong",[t._v("不同")]),t._v("的, 前者的上下文是module, 后者是window; 所以不要主观的依据this存在的位置来判断其实际的指向")]),t._v(" "),n("p",[t._v("具体的关于执行上下文、作用域、this相关内容可以在这里查看这篇: "),n("RouterLink",{attrs:{to:"/views/JavaScript/This&Context&Scope.html"}},[t._v("执行上下文、作用域、this")])],1)])}),[],!1,null,null,null);s.default=e.exports}}]);